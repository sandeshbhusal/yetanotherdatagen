;; Autogenerated SMTLib file by Datagen.
;; DO NOT MODIFY.

(set-logic ALL)

(define-fun min2 ((x Int) (y Int)) Int
    (ite (< x y) x y))

(define-fun max2 ((x Int) (y Int)) Int
    (ite (> x y) x y))

(define-fun-rec pow ((x Int) (n Int)) Int
    (ite (= n 0)
        1
        (* x (pow x (- n 1)))))

(define-fun first (
    <#list variables as variable >
        ( ${ variable } Int )
    </#list>
    ) Bool

    ${ conjunction_first }
)

(define-fun second (
    <#list variables as variable >
        ( ${ variable } Int )
    </#list>
    ) Bool

    ${ conjunction_second }
)

; Check if first is a subset of second
(push)
(assert (forall (
    <#list variables as variable >
        ( ${ variable } Int )
    </#list>
    )

    ( => (first
        <#list variables as variable >
            ${ variable }
        </#list>
        )

        (second
        <#list variables as variable >
            ${ variable }
        </#list>
        )
    )
))
(check-sat)
(pop)

; Check if second is a subset of first
(push)
(assert (forall (
    <#list variables as variable >
        ( ${ variable } Int )
    </#list>
    )

    ( => (first
        <#list variables as variable >
            ${ variable }
        </#list>
        )

        (second
        <#list variables as variable >
            ${ variable }
        </#list>
        )
    )
))
(check-sat)
(pop)
