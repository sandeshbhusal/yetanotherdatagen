/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 26 00:19:43 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntDivision_ESTest extends IntDivision_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(38631494, 38631494);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      // Undeclared exception!
      intDivision0.dividie((-152), (-6100));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(7, 43678);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(1952, 8);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(6458282, 6458282);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(7, 2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(1, 1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(1, 3211);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(0, 34);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(0, 770);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(2192, (-5456));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie((-1), (-414));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(79, 79);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(2192, 0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(1698, (-195));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie((-3079), 25914906);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(7, (-4358));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie((-1), (-1));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntDivision intDivision0 = new IntDivision();
      intDivision0.dividie(0, 33);
  }
}
