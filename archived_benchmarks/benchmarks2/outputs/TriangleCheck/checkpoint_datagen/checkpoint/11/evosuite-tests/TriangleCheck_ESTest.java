/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 24 20:30:24 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TriangleCheck_ESTest extends TriangleCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(6274, 2610, 6274);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(3745, 3, 359);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(5350, (-5), (-7202));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(3, 3, 3);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-2177), (-2177), (-2177));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(6185, 6185, 6185);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(3620, 3620, 3620);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(796, 796, 796);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-2823), (-5), 1549);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1544, 1544, 1544);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(22, 22, 22);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(2, 2, 2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(909, (-2172), 909);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(6, 6, 6);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-130), (-130), (-130));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-164), (-164), (-164));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(799, 799, 799);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(4884, 4884, 4884);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1821, 1821, 1821);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(259, 259, 259);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-3512), 1638, 5135);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(5, 5, 5);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(3745, 3745, 3745);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-399), 3620, 1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-418), (-418), (-418));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1563, 1563, 1563);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-1184), (-1184), (-1184));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-3619), (-3619), (-3619));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(2568, 2568, 2568);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(909, (-164), (-7175));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-694), (-5), 8);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-978), 764, (-911));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-2), (-2), (-2));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(22, (-941), 0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-2729), 1, 1805);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1318, 1318, 1318);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-417), (-417), (-417));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-298), (-298), (-298));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-3223), (-3223), (-3223));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(907, (-1097), 5644);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(0, (-1383), 2976);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-1809), (-1809), (-1809));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1280, 1280, 1280);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1293, 1293, 1293);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-36), (-36), (-36));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(32, 32, 32);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-5), (-5), (-1));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1556, 1556, 1556);
  }
}
