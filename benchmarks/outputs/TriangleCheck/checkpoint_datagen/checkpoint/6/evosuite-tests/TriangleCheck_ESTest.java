/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 25 21:38:39 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TriangleCheck_ESTest extends TriangleCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(837, 806, (-1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(0, (-1), (-1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-1), (-5226), (-2654));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-1340), 3548, 838);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(840, 969, 840);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(939, 939, 0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(8, 838, 8);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-5226), 0, 939);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1037, 840, 384);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-1), 834, 1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-1039), 2126, (-3539));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(0, (-3977), 838);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(979, 979, 518);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(7, 7, 0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(18, 18, 18);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-494), 785, (-1));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(839, 839, 0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-305), 2447, 2447);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-5226), 1, (-1039));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(2577, 2577, 2577);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(5, 5, 5);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-3539), (-3539), (-3539));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1, 8, 0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(1325, 10, 10);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle(838, 837, 1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TriangleCheck triangleCheck0 = new TriangleCheck();
      boolean boolean0 = triangleCheck0.check_triangle((-376), 3, (-1));
  }
}
