(declare-fun a () Int)
(declare-fun b () Int)
(declare-fun c () Int)
(declare-fun ac () Int)
(declare-fun bc () Int)
(declare-fun ab () Int)

(define-fun ours () Bool
(and
(>= a 1)
(< a ab)
(< a bc)
(< a ac)
(> ab b)
(> ab c)
(> bc b)
(> bc c)
(< b ac)
(> ac c)
(= (- a ab b) 0)
(= (- a ac c) 0)
(= (- bc b c) 0)
)
)

(define-fun current () Bool
  (and
    (< a ab)
    (< a bc)
    (< a ac)
    (<= a c)
    (<= ab bc)
    (> ab b)
    (> ab c)
    (> bc b)
    (> bc c)
    (< b ac)
    (> ac c)
    (= (- a ab b) 0)
    (= (- a ac c) 0)
    (= (- bc b c) 0)
  )
)

; Check if (implies inv1 inv2) is valid
(push)
(assert (and ours (not current)))
(check-sat)
(get-model)
(pop)

; Check if (implies inv2 inv1) is valid
(push)
(assert (and current (not ours)))
(check-sat)
(get-model)
(pop)
